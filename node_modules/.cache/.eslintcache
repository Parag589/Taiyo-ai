[{"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\index.js":"1","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\App.js":"2","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\reportWebVitals.js":"3","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\EditContact.tsx":"4","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\Contact.tsx":"5","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\ChartsandMap.tsx":"6","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\Context Provider\\ContactContext.js":"7","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\components\\EditContactComp.tsx":"8","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\components\\AddContact.tsx":"9"},{"size":535,"mtime":1693849461587,"results":"10","hashOfConfig":"11"},{"size":984,"mtime":1693849461431,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1693849461697,"results":"13","hashOfConfig":"11"},{"size":332,"mtime":1693849461947,"results":"14","hashOfConfig":"11"},{"size":1385,"mtime":1693849461916,"results":"15","hashOfConfig":"11"},{"size":3137,"mtime":1693849630824,"results":"16","hashOfConfig":"11"},{"size":368,"mtime":1693849461791,"results":"17","hashOfConfig":"11"},{"size":2075,"mtime":1693849461838,"results":"18","hashOfConfig":"11"},{"size":1768,"mtime":1693849461822,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"frd41m",{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\index.js",[],[],"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\App.js",[],[],"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\reportWebVitals.js",[],[],"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\EditContact.tsx",[],[],"C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\Contact.tsx",["52","53"],[],"import React from \"react\";\nimport './Contact.css'\nimport { useState, useContext } from \"react\";\nimport { useNavigate} from \"react-router-dom\";\n\nimport AddContact from \"../components/AddContact.tsx\";\nimport { contactContext } from \"../Context Provider/ContactContext.js\";\nexport default function Contact() {\n  const {contacts,setContacts}=useContext(contactContext);\n  const navigate=useNavigate();\n\n  const handleEdit=(id)=>{\n    navigate(`/editcontact/${id}`)\n  }\n  const handleDelete=(id)=>{\n    setContacts((prevValue)=>{\n      let newValue=[...prevValue];\n      newValue=newValue.filter((elem)=>{\n        return elem.id!=id;\n      })\n      return newValue;\n    })\n  }\n  return (\n    <div className=\"contact-page-wrapper\">\n      <AddContact />\n      <div className=\"contact-list\">\n        {\n          contacts && contacts?.length>0?\n          contacts.map((elem)=>(\n            <div className='contact' key={elem.id}>\n              <div>First Name: <span>{elem.firstName}</span></div>\n              <div>Last Name: <span>{elem.lastName}</span></div>\n              <div>Status: <span>{elem.status}</span></div>\n              <button onClick={()=>{handleEdit(elem.id)}}>Edit</button>\n              <button onClick={()=>{handleDelete(elem.id)}}>Delete</button>\n            </div>\n          ))\n          :\n          <div>No Contact Exists</div>\n        }\n      </div>\n    </div>\n  );\n}\n","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\pages\\ChartsandMap.tsx",["54"],[],"import React, { useEffect, useState } from \"react\";\nimport \"./ChartsandMap.css\";\nimport { Line } from \"react-chartjs-2\";\n\n//chartjs imports\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n} from \"chart.js\";\n\n//leflet imports\nimport { MapContainer, TileLayer, Marker,Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n\n\n\nexport default function ChartsandMap() {\n\n  const [label, setLabel] = useState([]);\n  const [graphFetchedData, setGraphFetchedData] = useState();\n  const [mapFetchedData, setMapFetchedData] = useState();\n  const [dataPoints, setDataPoints] = useState([]);\n  const [center, setCenter] = useState({ lat: 20, lng: 77 });\n  const zoom = 3;\n\n  useEffect(() => {\n    const getGraphData = async () => {\n      const res = await fetch(\n        \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n      );\n      const data = await res.json();\n      setGraphFetchedData(data);\n    };\n    getGraphData();\n  }, []);\n\n  useEffect(() => {\n    const getMapData = async () => {\n      const res = await fetch(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n      const data = await res.json();\n      setMapFetchedData(data);\n      \n    };\n    getMapData();\n  }, []);\n\n  useEffect(() => {\n    if (graphFetchedData && graphFetchedData.cases) {\n      let newLabel = [];\n      let newDataPoints = [];\n      for (let elem in graphFetchedData.cases) {\n        newLabel.push(elem);\n        newDataPoints.push(graphFetchedData.cases[elem]);\n      }\n      setLabel(newLabel);\n      setDataPoints(newDataPoints);\n    }\n  }, [graphFetchedData]);\n\n  useEffect(() => {\n\n  }, [mapFetchedData]);\n\n  let graphData = {\n    labels: label,\n    datasets: [\n      {\n        data: dataPoints,\n        backgroundColor: \"#F8F8F9\",\n        pointBorderColor: \"#111439\",\n      },\n    ],\n  };\n  let graphOptions = {\n    maintainAspectRatio: false,\n  };\n\n  //marker image\n  const markerIcon = new L.Icon({\n    iconUrl: require(\"../images/marker.png\"),\n    iconSize: [40,40],\n  });\n\n  return (\n    <div className=\"chartsandmappage\">\n      <h1>paragagarwal0589@gmail.com || 6395712243</h1>\n      <h1>Covid Cases:</h1>\n      <div className=\"lineChart\">\n        <Line data={graphData} options={graphOptions}></Line>\n      </div>\n      <h1>React Leaflet:</h1>\n\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer url=\"https://api.maptiler.com/maps/basic-v2/{z}/{x}/{y}.png?key=fs1jVq0ksqjWTawZ8fnS\" />\n        {\n          mapFetchedData && \n          mapFetchedData.map((elem)=>(\n            <Marker position={[elem.countryInfo.lat, elem.countryInfo.long]} icon={markerIcon} key={Math.random()}>\n            <Popup>\n              Country Name: <span> {elem.country}</span><br /> \n              Active Cases: <span>{elem.active}</span>  <br /> \n              Recovered Cases: <span>{elem.recovered}</span> <br />\n              Deaths: <span>{elem.deaths}</span> <br />\n            </Popup>\n          </Marker>\n          ))\n        }\n\n      </MapContainer>\n    </div>\n  );\n\n}\n","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\Context Provider\\ContactContext.js",["55"],[],"import { createContext, useContext, useState } from \"react\";\n\nconst contactContext=createContext();\n\nconst ContactProvider=({children})=>{\n    const [contacts,setContacts]=useState([]);\n    return(\n        <contactContext.Provider value={{contacts,setContacts}}>\n        {children}\n        </contactContext.Provider>\n    )\n\n}\n\n\n\nexport {ContactProvider,contactContext}","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\components\\EditContactComp.tsx",["56","57","58","59"],[],"import React, { useEffect } from \"react\";\nimport { useState,useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { contactContext } from \"../Context Provider/ContactContext\";\nexport default function Contact({id}) {\n  const [showAddContact, setshowAddContact] = useState(true);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [status, setStatus] = useState('');\n  const {contacts,setContacts}=useContext(contactContext);\n  const navigate=useNavigate();\n\n  const handleClick=async (e)=>{\n    e.preventDefault();\n    setContacts((prevValue)=>{\n        let newValue=[...prevValue];\n        for(let i=0;i<newValue.length;i++){\n            if(newValue[i].id==id){\n                newValue[i].firstName=firstName;\n                newValue[i].lastName=lastName;\n                newValue[i].status=status;\n            }\n        }\n        return newValue;\n    })\n    navigate('/contact');\n  }\n\n  useEffect(()=>{\n    contacts.forEach(elem => {\n        if(elem.id==id){\n            setFirstName(elem.firstName);\n            setLastName(elem.lastName);\n            setStatus(elem.status);\n        }\n    });\n  },[contacts])\n  \n  return (\n    <div className=\"addContact\">\n      {showAddContact && (\n        <form>\n          <div>\n            <label>Edit First Name: </label>\n            <input type=\"text\" onChange={(e)=>{setFirstName(e.target.value)}} value={firstName}/>\n          </div>\n          <div>\n            <label>Edit Last Name: </label>\n            <input type=\"text\" onChange={(e)=>{setLastName(e.target.value)}} value={lastName}/>\n          </div>\n          <div>\n            <label id='status'>New Status: </label>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('active')}} value={status}/> <span>Active</span>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('inactive')}} value={status}/> <span>Inactive</span>\n          </div>\n          <button onClick={handleClick}>Save Editted Contact</button>\n        </form>\n      )}\n    </div>\n  );\n}\n","C:\\Users\\asus\\Desktop\\chartsandmapproject-main\\chartsandmapproject-main\\src\\components\\AddContact.tsx",["60","61","62"],[],"import React from \"react\";\nimport './AddContact.css'\nimport { useState,useContext } from \"react\";\nimport { contactContext } from \"../Context Provider/ContactContext\";\nexport default function Contact() {\n  const [showAddContact, setshowAddContact] = useState(false);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [status, setStatus] = useState('');\n  const {setContacts}=useContext(contactContext);\n\n  const handleClick=(e)=>{\n    e.preventDefault();\n    if(firstName=='' || lastName=='' || status==''){\n      window.alert(\"Enter All Details\");\n      return;\n    }\n    setContacts((prevValue)=>{\n      const newValue=[...prevValue,{firstName,lastName,status,id:Math.random()}];\n      return newValue;\n    })\n    setshowAddContact(false);\n  }\n  \n  return (\n    <div className=\"addContact\">\n      {showAddContact && (\n        <form>\n          <div>\n            <label>First Name: </label>\n            <input type=\"text\" onChange={(e)=>{setFirstName(e.target.value)}}  required/>\n          </div>\n          <div>\n            <label>Last Name: </label>\n            <input type=\"text\" onChange={(e)=>{setLastName(e.target.value)}}  required/>\n          </div>\n          <div>\n            <label id='status'>Status: </label>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('active')}} /> <span>Active</span>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('inactive')}} /> <span>Inactive</span>\n          </div>\n          <button onClick={handleClick}>Save Contact</button>\n        </form> \n      )}\n\n      {\n        !showAddContact &&\n\n        <button className=\"create-contact\" onClick={()=>{setshowAddContact(true)}}>Create Contact</button>\n\n      }\n    </div>\n  );\n}\n",{"ruleId":"63","severity":1,"message":"64","line":3,"column":10,"nodeType":"65","messageId":"66","endLine":3,"endColumn":18},{"ruleId":"67","severity":1,"message":"68","line":19,"column":23,"nodeType":"69","messageId":"70","endLine":19,"endColumn":25},{"ruleId":"63","severity":1,"message":"71","line":29,"column":18,"nodeType":"65","messageId":"66","endLine":29,"endColumn":27},{"ruleId":"72","severity":1,"message":"73","line":1,"column":25,"nodeType":"65","messageId":"66","endLine":1,"endColumn":35},{"ruleId":"63","severity":1,"message":"74","line":6,"column":26,"nodeType":"65","messageId":"66","endLine":6,"endColumn":43},{"ruleId":"67","severity":1,"message":"75","line":18,"column":30,"nodeType":"69","messageId":"70","endLine":18,"endColumn":32},{"ruleId":"67","severity":1,"message":"75","line":31,"column":19,"nodeType":"69","messageId":"70","endLine":31,"endColumn":21},{"ruleId":"76","severity":1,"message":"77","line":37,"column":5,"nodeType":"78","endLine":37,"endColumn":15,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"75","line":14,"column":17,"nodeType":"69","messageId":"70","endLine":14,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":14,"column":33,"nodeType":"69","messageId":"70","endLine":14,"endColumn":35},{"ruleId":"67","severity":1,"message":"75","line":14,"column":47,"nodeType":"69","messageId":"70","endLine":14,"endColumn":49},"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'setCenter' is assigned a value but never used.","no-unused-vars","'useContext' is defined but never used.","'setshowAddContact' is assigned a value but never used.","Expected '===' and instead saw '=='.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["80"],{"desc":"81","fix":"82"},"Update the dependencies array to be: [contacts, id]",{"range":"83","text":"84"},[1185,1195],"[contacts, id]"]