{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\chartsandmapproject-main\\\\chartsandmapproject-main\\\\src\\\\pages\\\\ChartsandMap.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./ChartsandMap.css\";\nimport { Line } from \"react-chartjs-2\";\n\n//chartjs imports\nimport { Chart as ChartJS, LineElement, CategoryScale, LinearScale, PointElement } from \"chart.js\";\n\n//leflet imports\nimport { MapContainer, TileLayer, Marker, Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\nexport default function ChartsandMap() {\n  _s();\n  const [label, setLabel] = useState([]);\n  const [graphFetchedData, setGraphFetchedData] = useState();\n  const [mapFetchedData, setMapFetchedData] = useState();\n  const [dataPoints, setDataPoints] = useState([]);\n  const [center, setCenter] = useState({\n    lat: 20,\n    lng: 77\n  });\n  const zoom = 3;\n  useEffect(() => {\n    const getGraphData = async () => {\n      const res = await fetch(\"https://disease.sh/v3/covid-19/historical/all?lastdays=all\");\n      const data = await res.json();\n      setGraphFetchedData(data);\n    };\n    getGraphData();\n  }, []);\n  useEffect(() => {\n    const getMapData = async () => {\n      const res = await fetch(\"https://disease.sh/v3/covid-19/countries\");\n      const data = await res.json();\n      setMapFetchedData(data);\n    };\n    getMapData();\n  }, []);\n  useEffect(() => {\n    if (graphFetchedData && graphFetchedData.cases) {\n      let newLabel = [];\n      let newDataPoints = [];\n      for (let elem in graphFetchedData.cases) {\n        newLabel.push(elem);\n        newDataPoints.push(graphFetchedData.cases[elem]);\n      }\n      setLabel(newLabel);\n      setDataPoints(newDataPoints);\n    }\n  }, [graphFetchedData]);\n  useEffect(() => {}, [mapFetchedData]);\n  let graphData = {\n    labels: label,\n    datasets: [{\n      data: dataPoints,\n      backgroundColor: \"#F8F8F9\",\n      pointBorderColor: \"#111439\"\n    }]\n  };\n  let graphOptions = {\n    maintainAspectRatio: false\n  };\n\n  //marker image\n  const markerIcon = new L.Icon({\n    iconUrl: require(\"../images/marker.png\"),\n    iconSize: [40, 40]\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chartsandmappage\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"paragagarwal0589@gmail.com || 6395712243\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Covid Cases:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lineChart\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphData,\n        options: graphOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React Leaflet:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: center,\n      zoom: zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://api.maptiler.com/maps/basic-v2/{z}/{x}/{y}.png?key=fs1jVq0ksqjWTawZ8fnS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), mapFetchedData && mapFetchedData.map(elem => /*#__PURE__*/_jsxDEV(Marker, {\n        position: [elem.countryInfo.lat, elem.countryInfo.long],\n        icon: markerIcon,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"Country Name: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", elem.country]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 57\n          }, this), \"Active Cases: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: elem.active\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 57\n          }, this), \"Recovered Cases: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: elem.recovered\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 32\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 62\n          }, this), \"Deaths: \", /*#__PURE__*/_jsxDEV(\"span\", {\n            children: elem.deaths\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 23\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 50\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this)\n      }, Math.random(), false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(ChartsandMap, \"K7uE2ya/X8IXVsN6YqWwOmtdOlQ=\");\n_c = ChartsandMap;\nvar _c;\n$RefreshReg$(_c, \"ChartsandMap\");","map":{"version":3,"names":["React","useEffect","useState","Line","Chart","ChartJS","LineElement","CategoryScale","LinearScale","PointElement","MapContainer","TileLayer","Marker","Popup","L","jsxDEV","_jsxDEV","register","ChartsandMap","_s","label","setLabel","graphFetchedData","setGraphFetchedData","mapFetchedData","setMapFetchedData","dataPoints","setDataPoints","center","setCenter","lat","lng","zoom","getGraphData","res","fetch","data","json","getMapData","cases","newLabel","newDataPoints","elem","push","graphData","labels","datasets","backgroundColor","pointBorderColor","graphOptions","maintainAspectRatio","markerIcon","Icon","iconUrl","require","iconSize","className","children","fileName","_jsxFileName","lineNumber","columnNumber","options","url","map","position","countryInfo","long","icon","country","active","recovered","deaths","Math","random","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/chartsandmapproject-main/chartsandmapproject-main/src/pages/ChartsandMap.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./ChartsandMap.css\";\nimport { Line } from \"react-chartjs-2\";\n\n//chartjs imports\nimport {\n  Chart as ChartJS,\n  LineElement,\n  CategoryScale,\n  LinearScale,\n  PointElement,\n} from \"chart.js\";\n\n//leflet imports\nimport { MapContainer, TileLayer, Marker,Popup } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\nChartJS.register(LineElement, CategoryScale, LinearScale, PointElement);\n\n\n\nexport default function ChartsandMap() {\n\n  const [label, setLabel] = useState([]);\n  const [graphFetchedData, setGraphFetchedData] = useState();\n  const [mapFetchedData, setMapFetchedData] = useState();\n  const [dataPoints, setDataPoints] = useState([]);\n  const [center, setCenter] = useState({ lat: 20, lng: 77 });\n  const zoom = 3;\n\n  useEffect(() => {\n    const getGraphData = async () => {\n      const res = await fetch(\n        \"https://disease.sh/v3/covid-19/historical/all?lastdays=all\"\n      );\n      const data = await res.json();\n      setGraphFetchedData(data);\n    };\n    getGraphData();\n  }, []);\n\n  useEffect(() => {\n    const getMapData = async () => {\n      const res = await fetch(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n      const data = await res.json();\n      setMapFetchedData(data);\n      \n    };\n    getMapData();\n  }, []);\n\n  useEffect(() => {\n    if (graphFetchedData && graphFetchedData.cases) {\n      let newLabel = [];\n      let newDataPoints = [];\n      for (let elem in graphFetchedData.cases) {\n        newLabel.push(elem);\n        newDataPoints.push(graphFetchedData.cases[elem]);\n      }\n      setLabel(newLabel);\n      setDataPoints(newDataPoints);\n    }\n  }, [graphFetchedData]);\n\n  useEffect(() => {\n\n  }, [mapFetchedData]);\n\n  let graphData = {\n    labels: label,\n    datasets: [\n      {\n        data: dataPoints,\n        backgroundColor: \"#F8F8F9\",\n        pointBorderColor: \"#111439\",\n      },\n    ],\n  };\n  let graphOptions = {\n    maintainAspectRatio: false,\n  };\n\n  //marker image\n  const markerIcon = new L.Icon({\n    iconUrl: require(\"../images/marker.png\"),\n    iconSize: [40,40],\n  });\n\n  return (\n    <div className=\"chartsandmappage\">\n      <h1>paragagarwal0589@gmail.com || 6395712243</h1>\n      <h1>Covid Cases:</h1>\n      <div className=\"lineChart\">\n        <Line data={graphData} options={graphOptions}></Line>\n      </div>\n      <h1>React Leaflet:</h1>\n\n      <MapContainer center={center} zoom={zoom}>\n        <TileLayer url=\"https://api.maptiler.com/maps/basic-v2/{z}/{x}/{y}.png?key=fs1jVq0ksqjWTawZ8fnS\" />\n        {\n          mapFetchedData && \n          mapFetchedData.map((elem)=>(\n            <Marker position={[elem.countryInfo.lat, elem.countryInfo.long]} icon={markerIcon} key={Math.random()}>\n            <Popup>\n              Country Name: <span> {elem.country}</span><br /> \n              Active Cases: <span>{elem.active}</span>  <br /> \n              Recovered Cases: <span>{elem.recovered}</span> <br />\n              Deaths: <span>{elem.deaths}</span> <br />\n            </Popup>\n          </Marker>\n          ))\n        }\n\n      </MapContainer>\n    </div>\n  );\n\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}