{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\chartsandmapproject-main\\\\chartsandmapproject-main\\\\src\\\\components\\\\EditContactComp.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { contactContext } from \"../Context Provider/ContactContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Contact({\n  id\n}) {\n  _s();\n  const [showAddContact, setshowAddContact] = useState(true);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [status, setStatus] = useState('');\n  const {\n    contacts,\n    setContacts\n  } = useContext(contactContext);\n  const navigate = useNavigate();\n  const handleClick = async e => {\n    e.preventDefault();\n    setContacts(prevValue => {\n      let newValue = [...prevValue];\n      for (let i = 0; i < newValue.length; i++) {\n        if (newValue[i].id == id) {\n          newValue[i].firstName = firstName;\n          newValue[i].lastName = lastName;\n          newValue[i].status = status;\n        }\n      }\n      return newValue;\n    });\n    navigate('/contact');\n  };\n  useEffect(() => {\n    contacts.forEach(elem => {\n      if (elem.id == id) {\n        setFirstName(elem.firstName);\n        setLastName(elem.lastName);\n        setStatus(elem.status);\n      }\n    });\n  }, [contacts]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"addContact\",\n    children: showAddContact && /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Edit First Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setFirstName(e.target.value);\n          },\n          value: firstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Edit Last Name: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setLastName(e.target.value);\n          },\n          value: lastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          id: \"status\",\n          children: \"New Status: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"status\",\n          onClick: () => {\n            setStatus('active');\n          },\n          value: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 100\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"radio\",\n          name: \"status\",\n          onClick: () => {\n            setStatus('inactive');\n          },\n          value: status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Inactive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 102\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClick,\n        children: \"Save Editted Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Contact, \"6da03jLwEeSNTKpfTVnXNesoOts=\", false, function () {\n  return [useNavigate];\n});\n_c = Contact;\nvar _c;\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"names":["React","useEffect","useState","useContext","useNavigate","contactContext","jsxDEV","_jsxDEV","Contact","id","_s","showAddContact","setshowAddContact","firstName","setFirstName","lastName","setLastName","status","setStatus","contacts","setContacts","navigate","handleClick","e","preventDefault","prevValue","newValue","i","length","forEach","elem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","name","onClick","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/chartsandmapproject-main/chartsandmapproject-main/src/components/EditContactComp.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState,useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { contactContext } from \"../Context Provider/ContactContext\";\nexport default function Contact({id}) {\n  const [showAddContact, setshowAddContact] = useState(true);\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [status, setStatus] = useState('');\n  const {contacts,setContacts}=useContext(contactContext);\n  const navigate=useNavigate();\n\n  const handleClick=async (e)=>{\n    e.preventDefault();\n    setContacts((prevValue)=>{\n        let newValue=[...prevValue];\n        for(let i=0;i<newValue.length;i++){\n            if(newValue[i].id==id){\n                newValue[i].firstName=firstName;\n                newValue[i].lastName=lastName;\n                newValue[i].status=status;\n            }\n        }\n        return newValue;\n    })\n    navigate('/contact');\n  }\n\n  useEffect(()=>{\n    contacts.forEach(elem => {\n        if(elem.id==id){\n            setFirstName(elem.firstName);\n            setLastName(elem.lastName);\n            setStatus(elem.status);\n        }\n    });\n  },[contacts])\n  \n  return (\n    <div className=\"addContact\">\n      {showAddContact && (\n        <form>\n          <div>\n            <label>Edit First Name: </label>\n            <input type=\"text\" onChange={(e)=>{setFirstName(e.target.value)}} value={firstName}/>\n          </div>\n          <div>\n            <label>Edit Last Name: </label>\n            <input type=\"text\" onChange={(e)=>{setLastName(e.target.value)}} value={lastName}/>\n          </div>\n          <div>\n            <label id='status'>New Status: </label>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('active')}} value={status}/> <span>Active</span>\n            <input type=\"radio\" name='status' onClick={()=>{setStatus('inactive')}} value={status}/> <span>Inactive</span>\n          </div>\n          <button onClick={handleClick}>Save Editted Contact</button>\n        </form>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}